yeh post ki api hai jo approve karay gi aprove ke button k click per (https://e.de2solutions.com/mobile_dash/dash_approval_post.php  yeh app ne orm data se rakh ker send kerna hai 
1. id = yeh app redux e get karlo jab user login hota hai tu app uski id rakh ker send karogay json response main uscer_id ke name se milay gi yeh reduc ka code hai (import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';
import axios from 'axios';
import Toast from 'react-native-toast-message';
import CryptoJS from 'crypto-js';


export const CurrentLogin = createAsyncThunk(
  'user',
  async ({config, username, password}) => {
    return axios(config)
      .then(data => {
        console.log('first.>>>>>>>>>>>>>', config, username, password);
        const user = data?.data?.data?.find(user => user.user_id === username);
        if (user) {
          const hashedPassword = CryptoJS.MD5(password).toString();


          if (hashedPassword === user.password) {
            console.log('Login successful');
            return user;
          } else {
            console.log('Invalid password');
            Toast.show({
              type: 'error',
              text1: 'Invalid password',
              text2: 'Your password is incorrect',
            });
          }
        } else {
          console.log('Not Found User');
          Toast.show({
            type: 'error',
            text1: 'Invalid username',
            text2: 'Your username is invalid',
          });
        }
      })
      .catch(error => {
        console.log(error);
      });
  },
);

export const AuthSlice = createSlice({
  name: 'UsersData',
  initialState: {
    currentData: [],
    cartData: [],
    token: '',
    GrandCartTotalPrice: '0',
    Loading: false,
    AllProduct: [],
    accessData: []
  },
  reducers: {
    setLoader: (state, action) => {
      state.Loading = action.payload;
    },
    setMyData: (state, action) => {
      state.currentData = action.payload;
    },
    setToken: (state, action) => {
      state.token = action.payload.data;
    },
    setCartData: (state, action) => {
      state.cartData = action.payload;
    },
    setGrandCartTotalPrice: (state, action) => {
      state.GrandCartTotalPrice = action.payload;
    },
    setAllProducts: (state, action) => {
      state.AllProduct = action.payload;
    },
     setUserAccess: (state, action) => {
      state.accessData = action.payload
    },

    setLogout: state => {
      (state.token = ''), (state.currentData = []);
    },
  },

  extraReducers: builder => {
    builder
      .addCase(CurrentLogin.fulfilled, (state, action) => {
        state.Loading = false;
        if (action.payload) {
          state.currentData = action.payload;
          state.token = action.payload.password;
        } else {
          // Toast.show({
          //   type: 'error',
          //   text1: 'Your username or password is incorrect',
          // });
        }
        console.log('first', action.payload);

        // state.currentData = action.payload.data
        // state.token = action.payload.data.token
      })
      .addCase(CurrentLogin.rejected, (state, action) => {
        state.Loading = false;
      });
  },
});

// Action creators are generated for each case reducer function
export const {
  setMyData,
  setToken,
  setLogout,
  setLoader,
  setCartData,
  setGrandCartTotalPrice,
  setAllProducts,
  setUserAccess
} = AuthSlice.actions;

export default AuthSlice.reducer;

// export const getCurrentUser = state => state.UsersData.currentData
// export const getToken = state => state.UsersData.currentData
) )
2. trans_no  = (parameter se milay ga )
3. type (parameter  se milay gi )
4. approval = alway 0 hoga numeric 


item main   const handleApprove = item => {
    console.log('Approved:', item);
  };  response main yeh ara hai name
: 
"Ercon Energy Pvt Ltd"
ord_date
: 
"2023-09-27"
reference
: 
"P.KM1681/09"
total
: 
"79800"
trans_no
: 
"2"
type
: 
"32"

trans_no or type yehan se rakh ker bhejo lakin form data se 
import React, {useEffect, useState} from 'react';
import {View, ActivityIndicator, ScrollView, Text} from 'react-native';
import axios from 'axios';
import SimpleHeader from '../../../../components/SimpleHeader';
import ApprovalCard from './ApprovalCard';
import {APPCOLORS} from '../../../../utils/APPCOLORS';
import AsyncStorage from '@react-native-async-storage/async-storage';
import Icon from 'react-native-vector-icons/MaterialCommunityIcons';

const ApprovalListScreen = ({route}) => {
  const {listKey, title} = route.params;
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(false);

  const keyMap = {
    quotation_approval: 'data_unapprove_quote',
    so_approval: 'data_unapprove_order',
    po_approval: 'data_unapprove_po_order',
    grn_approval: 'data_unapprove_grn_order',
    voucher_approval: 'data_unapprove_voucher',
    delivery_approval: 'data_unapprove_deliveries',
  };

  // ðŸ”‘ Unique cache key
  const CACHE_KEY = `approval_list_${listKey}`;

  useEffect(() => {
    loadCachedData();
    fetchData();
  }, []);

  const loadCachedData = async () => {
    try {
      const cached = await AsyncStorage.getItem(CACHE_KEY);
      if (cached) {
        setData(JSON.parse(cached));
      }
    } catch (err) {
      console.log('Cache Error:', err);
    }
  };

  const fetchData = async () => {
    setLoading(true);
    try {
      const res = await axios.get(
        'https://e.de2solutions.com/mobile_dash/dash_approval.php',
      );

      const mappedKey = keyMap[listKey];
      const newData = res.data?.[mappedKey] || [];

      setData(newData);

      // Cache update
      await AsyncStorage.setItem(CACHE_KEY, JSON.stringify(newData));
    } catch (err) {
      console.log('API Error:', err);
    }
    setLoading(false);
  };

  const handleApprove = item => {
    console.log('Approved:', item);
  };

  if (loading && data.length === 0) {
    return (
      <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
        <ActivityIndicator size="large" color={APPCOLORS.Primary} />
      </View>
    );
  }

  return (
    <View style={{flex: 1, backgroundColor: APPCOLORS.Secondary}}>
      <SimpleHeader title={title || 'Approvals'} />
      <ScrollView contentContainerStyle={{padding: 15, flexGrow: 1}}>
        {data.length > 0 ? (
          data.map((item, index) => (
            <ApprovalCard
              key={index}
              reference={item.reference}
              ord_date={item.ord_date}
              name={item.name}
              total={item.total}
              onApprove={() => handleApprove(item)}
            />
          ))
        ) : (
          <View
            style={{
              flex: 1,
              justifyContent: 'center',
              alignItems: 'center',
              marginTop: 100,
            }}>
            <Icon name="database-off" size={80} color={APPCOLORS.WHITE} />
            <Text
              style={{
                textAlign: 'center',
                marginTop: 20,
                fontSize: 18,
                fontWeight: 'bold',
                color: APPCOLORS.BLACK,
              }}>
              No Data Available
            </Text>
            <Text
              style={{
                textAlign: 'center',
                marginTop: 10,
                fontSize: 14,
                color: 'gray',
                paddingHorizontal: 20,
              }}>
              There are no records pending for approval in this module.
            </Text>
          </View>
        )}
      </ScrollView>
    </View>
  );
};

export default ApprovalListScreen;
